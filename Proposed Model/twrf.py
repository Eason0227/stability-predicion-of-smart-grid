# -*- coding: utf-8 -*-
"""TWRF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bD-s_cSJI0He5rxKUtPUcaodiGHKq1us
"""

import pandas as pd
import random

from sklearn.tree import DecisionTreeRegressor
from sklearn.model_selection import train_test_split

def Trees_Weighting_Random_Forest(training_x , training_y, test_x, max_depth, sample_size, n_trees, n_features):
    trees = []
    OOB_MSE = []
    Prediction_set = []
    for i in range(n_trees):
        train_x, valid_x ,train_y ,valid_y = train_test_split(training_x, training_y , train_size = sample_size) #隨機選擇n%的樣本

        DT = DecisionTreeRegressor(max_depth = max_depth , max_features=n_features )
        DT.fit(train_x,train_y)
        dt_pred = DT.predict(valid_x)

        OOB_MSE.append(  mean_squared_error(valid_y,dt_pred) ) #MSE
        oob_mse = OOB_MSE/np.sum(OOB_MSE)

        test_pred = DT.predict(test_x)
        Prediction_set.append(test_pred)

    final_results = []
    for i in range(len(Prediction_set[0])): #總共要預測的Y有幾個 #2000個預測值
        predict_result = [] #存放每棵樹的預測值 #100棵樹有100個預測值
        final_result = 0
        for j in range(len(Prediction_set)): #每棵樹的預測值 #100棵樹
            predict_result.append( (Prediction_set[j][i]) )

        for k in range(len(predict_result)): #加權預測值
            final_result =  final_result + predict_result[k] * oob_mse[k]
        final_results.append(final_result)
    return final_results